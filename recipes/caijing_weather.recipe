#!/usr/bin/env python
# -*- coding: utf-8 -*-
import os, json
from calibre.web.feeds.news import BasicNewsRecipe

# ---------- 找到固定的 state 路径 ----------
try:
    BASE = os.path.abspath(os.path.dirname(__file__))   # 常规情况
except NameError:                                       # __file__ 不存在
    BASE = os.getcwd()                                  # Calibre exec() 情况
# -------------------------------------------

STATE_DIR  = os.path.join(BASE, 'state')
STATE_FILE = os.path.join(STATE_DIR, 'seen.json')
os.makedirs(STATE_DIR, exist_ok=True)


class CaijingWeather(BasicNewsRecipe):
    title  = '财经·天气（日增量）'
    oldest_article        = 6
    max_articles_per_feed = 1000
    ignore_failed_feeds   = True
    tries, sleep          = 3, 2
    auto_cleanup, timeout = True, 60
    no_stylesheets        = True
    new_cnt = 0

    feeds = [   # ← 你给出的 14 个 RSS 源
        ('36氪 • 24h 热榜',
         'https://rss.mifaw.com/articles/5c8bb11a3c41f61efd36683e/5c91d2e23882afa09dff4901'),
        ('第一财经 • 最新', 'https://rsshub.app/yicai/latest'),
        ('华尔街见闻 • 实时快讯-要闻', 'https://rsshub.app/wallstreetcn/live'),
        ('工信部 • 文件公示', 'https://rsshub.app/gov/miit/wjgs'),
        ('量子位 • 知乎专栏', 'https://rss.lilydjwg.me/zhihuzhuanlan/qbitai'),
        ('虎嗅网 • 全部', 'https://rsshub.app/huxiu/article'),
        ('雪球 • 今日话题', 'http://xueqiu.com/hots/topic/rss'),
        ('Air-Level • 天津监测', 'https://rsshub.app/air-level/air/tianjin'),
        ('Air-Level • 全国最优排行', 'https://rsshub.app/air-level/rank/best'),
        ('香港天文台 • 全球地震', 'https://rsshub.app/hko/weather'),
        ('天津天气 • 未来三天', 'https://rsshub.app/qweather/3days/天津'),
        ('国家气象中心 • 日降水预报', 'https://rsshub.app/ncc-cma/cmdp/image/RPJQWQYZ'),
        ('国家气象中心 • 部分云量预报', 'https://rsshub.app/ncc-cma/cmdp/image/BYYLJSLJPZYQHZ'),
        ('东方财富 • 研究策略报告', 'https://rsshub.app/eastmoney/report/strategyreport'),
        ('人民银行 • 工作论文', 'https://rsshub.app/gov/pbc/gzlw'),
        ('前瞻网 • 分析师专栏', 'https://rsshub.app/qianzhan/analyst/column/all'),
    ]

    def get_feeds(self):                 # Calibre 7 兼容
        return list(self.__class__.feeds)

    def initialize(self):
        super().initialize()
        try:
            with open(STATE_FILE, 'r', encoding='utf-8') as f:
                self.seen = set(json.load(f))
        except Exception:
            self.seen = set()
        self.new_cnt = 0
        self.log(f'Init OK, seen {len(self.seen)} items; cwd={os.getcwd()}')

    # ----- 关键：改进去重 -----
    def skip_article(self, a):
        gid = a.get('id') or a.get('guid') or a.get('link')
        if not gid:                      # fallback
            gid = f"{a.get('title')}||{a.get('published') or a.get('updated')}"
        if gid in self.seen:
            return True
        self.seen.add(gid)
        self.new_cnt += 1
        return False
    # -------------------------

    def get_browser(self):
        br = super().get_browser()
        br.set_proxies({})
        br.addheaders += [
            ('User-Agent', 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) '
                           'AppleWebKit/537.36 Chrome/124 Safari/537.36'),
            ('Accept-Encoding', 'identity'),
        ]
        return br

    def postprocess_book(self, oeb, opts, log):
        if getattr(self, 'new_cnt', 0) == 0:
            if AbortRecipe:
                raise AbortRecipe('No new articles')
            else:
                self.abort_recipe_processing('No new articles')
        with open(STATE_FILE, 'w', encoding='utf-8') as f:
            json.dump(list(self.seen), f)
