#!/usr/bin/env python
# -*- coding: utf-8 -*-
"""
CaijingWeather.recipe
抓取一组财经/时政/科普类 RSS，每日增量生成 EPUB。兼容 Calibre 6 / 7，
并支持 GitHub Actions 调用 ebook-convert。
"""

import os, json
from collections import OrderedDict
from calibre.web.feeds.news import BasicNewsRecipe
try:
    from calibre.web.feeds.news import AbortRecipe
except ImportError:
    AbortRecipe = None

# ---------- 目录计算 ----------
try:
    BASE = os.path.abspath(os.path.dirname(__file__))
except NameError:
    BASE = os.getcwd()
STATE_DIR  = os.path.join(BASE, "state")
STATE_FILE = os.path.join(STATE_DIR, "seen.json")
os.makedirs(STATE_DIR, exist_ok=True)



# -------------------------------------------------------------------
# 2. 原始 feed 列表  (名称, 链接)
# -------------------------------------------------------------------
FEEDS_RAW = [
    ("36氪 • 24h 热榜", "https://rss.mifaw.com/articles/5c8bb11a3c41f61efd36683e/5c91d2e23882afa09dff4901"),
    ("工信部 • 文件公示", "https://rsshub.app/gov/miit/wjgs"),
    ("雪球 • 今日话题",  "http://xueqiu.com/hots/topic/rss"),
    # …… 其余源保持原样粘贴 ……
    ("果壳网",           "http://feedmaker.kindle4rss.com/feeds/Guokr42.weixin.xml"),
]

# 去重（按链接）并保持顺序
FEEDS_CLEANED   = list(OrderedDict((link, name) for name, link in FEEDS_RAW).items())
FEEDS_FORMATTED = [(name, link) for link, name in FEEDS_CLEANED]   # Calibre 需要的格式


# -------------------------------------------------------------------
# 3. Recipe 主体
# -------------------------------------------------------------------
class CaijingWeather(BasicNewsRecipe):
    title                 = "财经·天气（日增量）"
    oldest_article        = 5                     # 仅抓 5 天内旧文
    max_articles_per_feed = 10_000
    ignore_failed_feeds   = True
    tries, sleep          = 3, 2
    auto_cleanup, timeout = True, 60
    no_stylesheets        = True
    feeds                 = FEEDS_FORMATTED      # 绑定到类属性

    # 运行期属性
    seen: set[str] = set()
    new_cnt: int   = 0

    # ---------------------------------------------------------------
    # Calibre 7 会在实例化时清空 self.feeds，这里返回备份
    # ---------------------------------------------------------------
    def get_feeds(self):
        return list(self.__class__.feeds)

    # ---------------------------------------------------------------
    # 生命周期
    # ---------------------------------------------------------------
    def initialize(self):
        super().initialize()
        try:
            with open(STATE_FILE, "r", encoding="utf-8") as fh:
                self.seen = set(json.load(fh))
        except Exception:
            self.seen = set()
        self.new_cnt = 0
        self.log(f"Init OK – {len(self.seen)} items previously seen")

    def skip_article(self, a):
        date = a.get("published") or a.get("updated") or a.get("pubDate") or ""
        url  = a.get("link") or a.get("id") or a.get("guid") or ""
        gid  = f"{url}||{date}" if date else f"{url}||{a.get('title')}"
        if gid in self.seen:
            return True
        self.seen.add(gid)
        self.new_cnt += 1
        return False

    def get_browser(self):
        br = super().get_browser()
        br.set_proxies({})
        br.addheaders += [
            ("User-Agent",
             "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 "
             "Chrome/124 Safari/537.36"),
            ("Accept-Encoding", "identity"),
        ]
        return br

    def postprocess_book(self, oeb, opts, log):
        # 统计真正进入 spine 的条目
        real_cnt = len([i for i in oeb.spine if i.id not in ("cover", "masthead")])
        log.info(f"★ DEBUG → new_cnt={self.new_cnt}, real_cnt={real_cnt}")

        # 没有新文章则优雅退出（CI 依旧算成功）
        if real_cnt == 0:
            msg = "No new articles"
            log.info(f"★ DEBUG → {msg}")
            if AbortRecipe:
                raise AbortRecipe(msg)
            else:                 # Calibre 6
                self.abort_recipe_processing(msg)

        # 写回 seen.json
        try:
            with open(STATE_FILE, "w", encoding="utf-8") as fh:
                json.dump(list(self.seen), fh)
            log.info(f"★ DEBUG → Wrote {len(self.seen)} gids to {STATE_FILE}")
        except Exception as exc:
            log.info(f"★ DEBUG → Failed to write seen.json: {exc}")


# -------------------------------------------------------------------
# 4. 本地调试：python caijing_weather.recipe 时可查看表格
#    在 Calibre / GitHub Actions 中不会触发 (__name__ ≠ "__main__")
# -------------------------------------------------------------------
if __name__ == "__main__":
    try:
        import pandas as pd          # 本地如果没装也无所谓
        import ace_tools as tools

        tools.display_dataframe_to_user(
            name="去重后的 RSS 源",
            dataframe=pd.DataFrame(FEEDS_FORMATTED, columns=["名称", "链接"]),
        )
    except ImportError:
        pass
